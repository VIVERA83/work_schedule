"""Initial tables

Revision ID: 5266fdb2ec65
Revises: 4a4d90852498
Create Date: 2025-01-27 21:59:17.664787

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5266fdb2ec65"
down_revision: Union[str, None] = "4a4d90852498"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "car",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("car_model", sa.String(), nullable=False),
        sa.Column("car_number", sa.String(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("car_number"),
        schema="work_schedule",
    )
    op.create_table(
        "driver",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="work_schedule",
    )
    op.create_table(
        "schedule_types",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("work_days", sa.Integer(), nullable=False),
        sa.Column("weekend_days", sa.Integer(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="work_schedule",
    )
    op.create_index(
        "type_index",
        "schedule_types",
        ["name", "work_days", "weekend_days"],
        unique=True,
        schema="work_schedule",
    )
    op.create_table(
        "car_driver_association",
        sa.Column("car_id", sa.INTEGER(), nullable=False),
        sa.Column("driver_id", sa.INTEGER(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["car_id"], ["work_schedule.car.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"], ["work_schedule.driver.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="work_schedule",
    )
    op.create_index(
        "car_driver_association_index",
        "car_driver_association",
        ["car_id", "driver_id"],
        unique=True,
        schema="work_schedule",
    )
    op.create_table(
        "car_schedule_history",
        sa.Column("id_car", sa.INTEGER(), nullable=True),
        sa.Column("id_schedule_type", sa.INTEGER(), nullable=True),
        sa.Column(
            "date",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("is_working", sa.Boolean(), nullable=False),
        sa.Column("what_day", sa.Integer(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id_car"], ["work_schedule.car.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_schedule_type"],
            ["work_schedule.schedule_types.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="work_schedule",
    )
    op.create_table(
        "work_schedule_history",
        sa.Column("id_driver", sa.INTEGER(), nullable=True),
        sa.Column("id_schedule_type", sa.INTEGER(), nullable=True),
        sa.Column(
            "date",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("is_working", sa.Boolean(), nullable=False),
        sa.Column("what_day", sa.Integer(), nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id_driver"], ["work_schedule.driver.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_schedule_type"],
            ["work_schedule.schedule_types.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="work_schedule",
    )
    op.drop_table("driver")
    op.drop_table("work_schedule_history")
    op.drop_table("car")
    op.drop_table("car_schedule_history")
    op.drop_index("type_index", table_name="schedule_types")
    op.drop_table("schedule_types")
    op.drop_index("car_driver_association_index", table_name="car_driver_association")
    op.drop_table("car_driver_association")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "car_driver_association",
        sa.Column("car_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("driver_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["car_id"],
            ["car.id"],
            name="car_driver_association_car_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["driver.id"],
            name="car_driver_association_driver_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="car_driver_association_pkey"),
    )
    op.create_index(
        "car_driver_association_index",
        "car_driver_association",
        ["car_id", "driver_id"],
        unique=True,
    )
    op.create_table(
        "schedule_types",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("work_days", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("weekend_days", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('schedule_types_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="schedule_types_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "type_index",
        "schedule_types",
        ["name", "work_days", "weekend_days"],
        unique=True,
    )
    op.create_table(
        "car_schedule_history",
        sa.Column("id_car", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("id_schedule_type", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "date",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_working", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("what_day", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id_car"],
            ["car.id"],
            name="car_schedule_history_id_car_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["id_schedule_type"],
            ["schedule_types.id"],
            name="car_schedule_history_id_schedule_type_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="car_schedule_history_pkey"),
    )
    op.create_table(
        "car",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("car_model", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("car_number", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="car_pkey"),
        sa.UniqueConstraint("car_number", name="car_car_number_key"),
    )
    op.create_table(
        "work_schedule_history",
        sa.Column("id_driver", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("id_schedule_type", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "date",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_working", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("what_day", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id_driver"],
            ["driver.id"],
            name="work_schedule_history_id_driver_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["id_schedule_type"],
            ["schedule_types.id"],
            name="work_schedule_history_id_schedule_type_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="work_schedule_history_pkey"),
    )
    op.create_table(
        "driver",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="driver_pkey"),
    )
    op.drop_table("work_schedule_history", schema="work_schedule")
    op.drop_table("car_schedule_history", schema="work_schedule")
    op.drop_index(
        "car_driver_association_index",
        table_name="car_driver_association",
        schema="work_schedule",
    )
    op.drop_table("car_driver_association", schema="work_schedule")
    op.drop_index("type_index", table_name="schedule_types", schema="work_schedule")
    op.drop_table("schedule_types", schema="work_schedule")
    op.drop_table("driver", schema="work_schedule")
    op.drop_table("car", schema="work_schedule")
    # ### end Alembic commands ###
